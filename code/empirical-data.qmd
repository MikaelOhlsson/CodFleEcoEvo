---
title: "Cod-Flounder Empirical Data"
format:
  html:
    theme: cosmo
    embed-resources: true
    toc: true
    toc-depth: 3
knitr:
  opts_chunk:
    eval: true
    echo: true
    message: false
    warning: false
    fig-align: center
latex-tinytex: false
---



## Loading data

```{r}
library(factoextra)
library(ggh4x)
library(ggpubr)
library(cowplot)
library(RColorBrewer)
library(raster)
library(abdiv)
library(tidyverse)
```

```{r}

# Biomass index (data from Lindmark 2023, specific for subdiv 25-28)
cod_fle_index <- read_rds("../data/cod_fle_index.rds")

# Cod and flounder historical data of body size development
cod_h <- read_rds("../data/cod_cpue_length_historical.rds") |>
  filter(sub_div %in% c(25:28) &
           (year >= 1978 & year <= 2015) & 
           quarter %in% c(1, 4) & 
           !is.na(length_class)
  ) |>
  summarise(length_bio_dens = sum(biomass_density),
            .by = c(year, length_class, sub_div)) |> 
  mutate(species = "cod") |> 
  arrange(year, length_class)

cod_n <- read_rds("../data/cod_cpue_length.rds") |>
  filter(sub_div %in% c(25:28) & 
           year >= 2016 & 
           quarter %in% c(1, 4) &
           !is.na(length_class)
  ) |>
  summarise(length_bio_dens = sum(biomass_density), 
            .by = c(year, length_class)) |> 
  mutate(species = "cod") |> 
  arrange(year, length_class)

fle_h <- read_rds("../data/fle_cpue_length_historical.rds") |>
  filter(sub_div %in% c(25:28) & 
           (year >= 1978 & year <= 2015) & 
           quarter %in% c(1, 4) &
           !is.na(length_class)) |>
  summarise(length_bio_dens = sum(biomass_density),
            .by = c(year, length_class)) |> 
  mutate(species = "flounder") |> 
  arrange(year, length_class)

fle_n <- read_rds("../data/fle_cpue_length.rds") |>
  filter(sub_div %in% c(25:28) & 
           year >= 2016 & 
           quarter %in% c(1, 4) &
           !is.na(length_class)) |>
  summarise(length_bio_dens = sum(biomass_density),
            .by = c(year, length_class)) |> 
  mutate(species = "flounder") |> 
  arrange(year, length_class)

cod_fle_size <- bind_rows(cod_h, cod_n, fle_h, fle_n)



# 2024-10-27 stomach content data
new_stom_data <- read_rds("../data/stomachs_CodFlecoevo_v2.rds") %>%
  mutate(prey_weight_tot = rowSums(.[3:17])) |>
  # Remove cod with empty stomachs:
  filter(prey_weight_tot > 0) |>
  # Remove cod where the cod weighs less than its stomach content:
  filter(prey_weight_tot < pred_weight) |>
  mutate(prey_pred_ratio = prey_weight_tot / pred_weight) |>
  # Remove upper 1% quantile of cod with heaviest
  # stomach content to body weight ratio, as some outliers still have
  # unrealistic stomach content weights:
  filter(quantile(prey_pred_ratio, 0.99) > prey_pred_ratio)

# Which year brackets to aggregate:
year_brackets <- c(1962, 1978, 1990, 2000, 2008, 2014, 2023)
```



## Body size distribution (Figure 2)

Mean and 95-percentile body length data for cod and flounder (shown below with the biomass figure).

Includes years 1978-2023.

```{r}
#| fig-height: 2.8
#| fig-width: 6.5
#| out-width: 80%

# Total density of hauls, used to calculate proportional density 
dens_prop <- cod_fle_size |>
  mutate(tot_density = sum(length_bio_dens),
         .by = c(year, species)) |>
  mutate(prop = length_bio_dens / tot_density)

# Q4 Mean length based on density of length classes
dens_mean <- dens_prop |>
  summarise(
    meanlength = sum(length_class * length_bio_dens) / sum(length_bio_dens),
    .by = c(species, year)
  )

# 95th percentile obtained with cumulative sum of proportion of each length
# class, with 95-percentile set as the length closest to the 95-percentile
dens_95 <- dens_prop |>
  arrange(year, length_class) |>
  group_by(year, species) |>
  mutate(cumprop = cumsum(prop)) |>
  filter(abs(cumprop - 0.95) == min(abs(cumprop - 0.95))) |>
  ungroup()

gg_size_change <- dens_95 |>
  left_join(dens_mean, by = join_by(year, species)) |>
  rename(p95_length = length_class,
         mean_length = meanlength) |>
  pivot_longer(cols = c(p95_length, mean_length), 
               names_to = "length_var", 
               values_to = "length_val") |>
  mutate(length_var = case_when(
      length_var == "mean_length" ~ "Mean",
      length_var == "p95_length"  ~ "95 percentile"
  )) |>
  mutate(species = str_to_title(species)) |> 
  ggplot() +
  aes(x = year, y = length_val, color = length_var) +
  geom_point() +
  geom_smooth(formula = y~poly(x,2), method = "lm", se = FALSE) +
  scale_color_manual(values = c(brewer.pal(n = 8, name = "Dark2")[2:3])) +
  facet_wrap(. ~ species) + 
  labs(x = "Year", y = "Length (cm)", color = "Length Variable") +
  theme_bw() +
  theme(panel.grid = element_blank(),
        strip.background = element_rect(fill = "white", colour = "black"),
        legend.position = "bottom",
        legend.margin = margin(t = -10), 
        strip.text = element_blank())
```

Biomass estimates based on Lindmark 2023, years covering 1993-2019 for subdivision 25-28.

```{r}
#| fig-width: 6
#| fig-height: 6
#| out-width: 80%

gg_biomass <- cod_fle_index |>
  ggplot(aes(x = year, y = est_t/1000, ymax = upr_t/1000, ymin = lwr_t/1000)) +
  geom_line(linewidth = 1) +
  geom_ribbon(alpha = 0.2, color = NA) +
  scale_x_continuous(limits = c(1978,2023)) +
  facet_wrap(. ~ species) +
  labs(x = "Year", y = "Biomass estimate (1000 t)",
       color = "Species", fill = "Species") +
  theme_bw() +
  theme(panel.grid = element_blank(),
        strip.background = element_rect(fill = "white", colour = "black"),
        axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank())


plot_grid(
  gg_biomass, gg_size_change, 
  ncol = 1, 
  rel_heights = c(0.45,0.55), 
  labels = c("A", "B")
)
```



## Cod and flounder diet

Cod diet includes years 1963--2023. Flounder diet limited to years 2015-2023. Testing each year interval separately, aggregating weights for each type of food from year to interval, and then calculates the proportion of each diet type for each size class. Further divided into first and fourth quarters.

Count data of number of cod stomach samples per size class:

```{r}
#| fig-width: 9
#| fig-height: 9
#| out-width: 100%

cod_length_categories <- c(-Inf, 10, 15, 20, 25, 30, 40, 50, Inf)
fle_length_categories <- c(-Inf, 20, 30, Inf)


new_stom_data |> 
  mutate(predator_length_class = ifelse(
    predator_code == "COD",
    paste0("cod_", cut(pred_length, cod_length_categories)),
    paste0("flounder_", cut(pred_length, fle_length_categories))
  )) |>
  mutate(quarter = quarter(month)) |>
  filter(quarter %in% c(1, 4)) |>
  mutate(predator_length_class = case_when(
    predator_length_class == "flounder_(-Inf,20]" ~ "Fle < 20",
    predator_length_class == "flounder_(20,30]" ~ "Fle 20-30",
    predator_length_class == "flounder_(30, Inf]" ~ "Fle 30+",
    predator_length_class == "cod_(-Inf,10]" ~ "Cod < 10",
    predator_length_class == "cod_(10,15]" ~ "Cod 10-15",
    predator_length_class == "cod_(15,20]" ~ "Cod 15-20",
    predator_length_class == "cod_(20,25]" ~ "Cod 20-25",
    predator_length_class == "cod_(25,30]" ~ "Cod 25-30",
    predator_length_class == "cod_(30,40]" ~ "Cod 30-40",
    predator_length_class == "cod_(40,50]" ~ "Cod 40-50",
    predator_length_class == "cod_(50, Inf]" ~ "Cod 50+"
  )) |>
  mutate(quarter = case_when(
    quarter == "1" ~ "Q1",
    quarter == "4" ~ "Q4"
  )) |>
  mutate(predator_code = case_when(
    predator_code == "COD" ~ "Cod",
    predator_code == "FLE" ~ "Flounder"
  )) |>
  group_by(predator_code, year, quarter) |> 
  count(predator_length_class) |> 
  ggplot(aes(x = year, y = n, fill = predator_length_class)) + 
  geom_col(position = "stack") + 
  scale_fill_brewer(palette = "Paired") +
  scale_x_continuous(breaks = scales::extended_breaks(n = 60  / 5), 
                     expand = expansion(add = 0.5)) +
  facet_grid(quarter ~ predator_code, scales = "free_x", space = "free_x") +
  labs(fill = "Length (cm)", x = "Year", y = "Number of stomach samples") +
  theme_bw() +
  theme(panel.grid = element_blank(),
        strip.background = element_rect(fill = "white", colour = "black"),
        axis.text.x = element_text(angle = 35, hjust = 1, vjust = 1),
        legend.position = "bottom")
```

Stomach data visualization:

```{r}
#| fig-width: 12
#| fig-height: 6.4
#| out-width: 100%

#For cleaner naming of some plots
stomLabelling <- function(df) {
  df |> 
    mutate(predator_length_class = case_when(
      predator_length_class == "flounder_(-Inf,20]" ~ "< 20",
      predator_length_class == "flounder_(20,30]" ~ "20-30",
      predator_length_class == "flounder_(30, Inf]" ~ "30+",
      predator_length_class == "cod_(-Inf,10]" ~ "< 10",
      predator_length_class == "cod_(10,15]" ~ "10-15",
      predator_length_class == "cod_(15,20]" ~ "15-20",
      predator_length_class == "cod_(20,25]" ~ "20-25",
      predator_length_class == "cod_(25,30]" ~ "25-30",
      predator_length_class == "cod_(30,40]" ~ "30-40",
      predator_length_class == "cod_(40,50]" ~ "40-50",
      predator_length_class == "cod_(50, Inf]" ~ "50+"
    )) |>
    mutate(year_agg = case_when(
      year_agg == "(1962,1978]" ~ "1962-1978",
      year_agg == "(1978,1990]" ~ "1979-1990",
      year_agg == "(1990,2000]" ~ "1991-2000",
      year_agg == "(2000,2008]" ~ "2001-2008",
      year_agg == "(2008,2014]" ~ "2009-2014",
      year_agg == "(2014,2023]" ~ "2015-2023"
    )) |>
    mutate(quarter = case_when(
      quarter == "1" ~ "Q1",
      quarter == "4" ~ "Q4"
    )) |>
    mutate(predator_code = case_when(
      predator_code == "COD" ~ "Cod",
      predator_code == "FLE" ~ "Flounder"
    ))
}


stom_count_data <- new_stom_data |> 
  mutate(year_agg = as.character(cut(year, year_brackets, dig.lab = 10))) |>
  mutate(quarter = quarter(month)) |> 
  filter(quarter %in% c(1, 4)) |>
  mutate(predator_length_class = ifelse(
    predator_code == "COD",
    paste0("cod_", cut(pred_length, cod_length_categories)),
    paste0("flounder_", cut(pred_length, fle_length_categories))
  )) |>
  select(predator_code, year_agg, quarter, predator_length_class, pred_ID) |>
  distinct() |>
  group_by(predator_code, year_agg, quarter, predator_length_class) |>
  count() |> 
  ungroup() |>
  stomLabelling()



new_stom_data |> 
  pivot_longer(cols = 3:17,
               names_to = "species_group",
               values_to = "prey_weight") |>
  mutate(year_agg = as.character(cut(year, year_brackets, dig.lab = 10))) |>
  mutate(quarter = quarter(month)) |> 
  filter(quarter %in% c(1, 4)) |>
  mutate(predator_length_class = ifelse(
    predator_code == "COD",
    paste0("cod_", cut(pred_length, cod_length_categories)),
    paste0("flounder_", cut(pred_length, fle_length_categories))
  )) |>
  mutate(
    prey_weight_rel = prey_weight / prey_weight_tot,
    .by = c(pred_ID, predator_code, year_agg, quarter,
            predator_length_class)
  ) |> 
  summarise(
    prey_rel_mean = sum(prey_weight_rel, na.rm = TRUE),
    .by = c(predator_code, year_agg, quarter,
            predator_length_class, species_group)
  ) |> 
  mutate(
    prey_rel_norm = prey_rel_mean / sum(prey_rel_mean, na.rm = TRUE),
    .by = c(predator_code, year_agg, quarter, predator_length_class)
  ) |>
  stomLabelling() |>
  ggplot(aes(x = predator_length_class, y = prey_rel_norm,
             fill = species_group)) +
  geom_col() +
  geom_text(
    data = stom_count_data,
    mapping = aes(x = predator_length_class, y = 1.05, label = n),
    inherit.aes = FALSE, size = 2.75
  ) +
  scale_fill_manual(values = c(brewer.pal(name = "Paired", n = 12),
                               brewer.pal(name = "Dark2", n = 3))[1:15]) +
  facet_nested(quarter ~ predator_code + year_agg,
               scales = "free", space = "free") +
  theme_bw() +
  theme(panel.grid = element_blank(),
        strip.background = element_rect(fill = "white", colour = "black"),
        axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1),
        legend.position = "bottom") +
  labs(fill = "Species Group",
       x = "Predator Length Class",
       y = "Stomach content dietary proportions")
```



## Dietary fish/invertebrate proportions (Figure 3)

Follows cod's dietary proportion of fish and invertebrates over the years 1993-2023.

Cod dietary transition from invertebrates to fish diet over time, divided in distinct cod length classes:

```{r}
#| fig-width: 7
#| fig-height: 4
#| out-width: 100%

cod_length_categories_coarse <- c(10, 20, 25, 30, 40, 50, Inf)

new_stom_data |>
  mutate(year_agg = as.character(cut(year, year_brackets, dig.lab = 10))) |>
  mutate(quarter = lubridate::quarter(month)) |> 
  filter(quarter %in% c(1, 4) & 
           pred_length > 10 & predator_code == "COD") |>
  mutate(predator_length_class = ifelse(
    predator_code == "COD",
    paste0("cod_", cut(pred_length, cod_length_categories_coarse)),
    paste0("flounder_", cut(pred_length, fle_length_categories))
  )) |>
  # Below we do not include specific `other`, as it only includes
  # plant material, non-biological materials, and unidentified prey:
  mutate(
    invert = Amphipoda + `other Arthropods` + `other invert` +
      Polychaeta + Bivalvia + Mysidae + `Saduria entomon`,
    fish = `other Chord` + Clupeidae + `Clupea harengus` + `Gadus morhua` +
      `Sprattus sprattus` + `Platichthys flesus` + Gobiidae
  ) |>
  select(invert, fish, year, predator_length_class) |>
  mutate(
    invert = invert / (invert + fish),
    fish = 1 - invert,
    .by = c(year, predator_length_class)
  ) |> 
  summarise(
    invert = sum(invert, na.rm = TRUE),
    fish = sum(fish, na.rm = TRUE),
    .by = c(year, predator_length_class)
  ) |>
  mutate(
    invert_prop = invert / (invert + fish),
    fish_prop = fish / (invert + fish)
  ) |> 
  pivot_longer(cols = invert_prop | fish_prop, 
               names_to = "prey", 
               values_to = "weight_prop") |> 
  mutate(predator_length_class = case_when(
    predator_length_class == "cod_(-Inf,10]" ~ "< 10",
    predator_length_class == "cod_(10,20]" ~ "10-20",
    predator_length_class == "cod_(20,25]" ~ "20-25",
    predator_length_class == "cod_(25,30]" ~ "25-30",
    predator_length_class == "cod_(30,40]" ~ "30-40",
    predator_length_class == "cod_(40,50]" ~ "40-50",
    predator_length_class == "cod_(50,Inf]" ~ "50+"
  )) |>
  mutate(prey = case_when(
    prey == "fish_prop" ~ "Fish",
    prey == "invert_prop" ~ "Invertebrate"
  )) |>
  ggplot(aes(year, weight_prop, color = prey)) +
  geom_smooth(formula = y ~ s(x, k = 4), method = "gam", se = FALSE) +
  geom_point() +
  scale_color_manual(values = c("steelblue", "darkgoldenrod2")) +
  facet_wrap(predator_length_class ~ ., scales = "free") + 
  theme_bw() +
  theme(panel.grid = element_blank(),
        strip.background = element_rect(fill = "white", colour = "black"),
        legend.position = "bottom",
        legend.margin = margin(t = -10)) +
  labs(x = "Year",
       y = "Dietary weight proportion",
       color = "Prey type: ")
```



## Horn-Morisita Distance index (Figure 4)

Morisita distance index value ranges 0-1, with 0 being identical and 1 fully different diets. Uses pairwise comparisons of two sets of vectors. *Horn* version to account for values being proportions instead of count data, as in our case with stomach content weight. Mind that year facets only apply to cod diet; flounder diet is fixed to years 2015-2022 due to not being sampled prior.

```{r}
new_stom_df <- new_stom_data |>
  pivot_longer(cols = 3:17,
               names_to = "species_group",
               values_to = "prey_weight") |>
  mutate(year_agg = as.character(cut(year, year_brackets, dig.lab = 10))) |>
  mutate(quarter = quarter(month)) |> 
  filter(quarter %in% c(1, 4)) |>
  mutate(predator_length_class = ifelse(
    predator_code == "COD",
    paste0("cod_", cut(pred_length, cod_length_categories)),
    paste0("flounder_", cut(pred_length, fle_length_categories))
  )) |>
  mutate(
    prey_weight_rel = prey_weight / prey_weight_tot,
    .by = c(pred_ID, predator_code, year_agg, quarter,
            predator_length_class)
  ) |> 
  summarise(
    prey_rel_mean = sum(prey_weight_rel, na.rm = TRUE),
    .by = c(predator_code, year_agg, quarter,
            predator_length_class, species_group)
  ) |> 
  mutate(
    prey_rel_norm = prey_rel_mean / sum(prey_rel_mean, na.rm = TRUE),
    .by = c(predator_code, year_agg, quarter, predator_length_class)
  )

MoriExe <- function(x1, x2){
  horn_morisita(
    x1 |> arrange(species_group) |> pull(w_sum), 
    x2 |> arrange(species_group) |> pull(w_sum)
  ) |>
    round(3)
}

# Data to combine with the stomach data to add missing prey items
# (and set weight to 0)
all_sp_groups <- new_stom_df |> 
  filter(!is.na(species_group)) |>
  distinct(species_group) |>
  mutate(w_sum = 0)

# Year intervals to manually add to flounder's missing intervals
# (while keeping weights as during 2015-2020)
all_year_agg <- new_stom_df |> 
  distinct(year_agg) |>  
  pull(year_agg)

# If a predator of a specific time period and size class is
# fully missing a prey, the following tibble will be used to add
# an empty line for that prey, with stomach weight 0, so that
# the right species will be matched later in the Morisita function
w_empty <- new_stom_df |>
  filter(!is.na(species_group)) |>
  distinct(predator_length_class) |> # For each size class,
  mutate(year_agg = list(all_year_agg)) |> # Add year brackets (nested)
  unnest(year_agg) |> # (expand year brackets)
  # Add filler prey data to use for missing values (w/ weight 0):
  mutate(sp_empty = nest(all_sp_groups)) |>
  unnest(sp_empty) |>
  unnest(data) |> # (2x expand)
  nest() |> # nest all...
  slice(c(1,1)) |> #... and duplicate...
  mutate(quarter = c(1, 4)) |> #...to add quarters 1 and 4
  unnest(data)

# Set up the first half of the tibble, with time data and
# summarized prey weight information
tmp_half <- 
  new_stom_df |> 
  rename(w_sum = prey_rel_norm) |>
  filter(!is.na(species_group)) |> 
  group_by(predator_code) |> 
  nest() |>
  ungroup() |>
  slice(c(1, rep(2, each = 6))) |> # Manually duplicate flounder instances
  mutate(.r = 1:n()) |>
  unnest(data) |> 
  mutate(year_agg = case_when(
    .r == 1 ~ year_agg, # (leave cod data as is)
    .r == 2 ~ "(1962,1978]", # properly attribute time periods for flounder duplicates
    .r == 3 ~ "(1978,1990]",
    .r == 4 ~ "(1990,2000]",
    .r == 5 ~ "(2000,2008]",
    .r == 6 ~ "(2008,2014]",
    .r == 7 ~ "(2014,2023]"
  )) |>
  select(!predator_code & !.r) |>
  # Join with empty-values tibble to add missing prey instances:
  full_join(
    w_empty,
    by = join_by(predator_length_class, species_group, year_agg, quarter)
  ) |>
  select(!w_sum.y) |>
  rename(w_sum = w_sum.x) |>
  # Set missing prey stomach weight to zero:
  mutate(w_sum = ifelse(is.na(w_sum), 0, w_sum)) |>
  arrange(year_agg, quarter, predator_length_class) |> 
  ungroup() |>
  group_by(predator_length_class, year_agg, quarter) |> 
  nest() # nest stomach weights

# Use crossing() to generate tibble with all combinations
# of predator size classes and time periods
mori_fn <- tmp_half |>
  crossing(tmp_half, .name_repair = "unique") |>
  rename(predator_length_class.x = predator_length_class...3,
         predator_length_class.y = predator_length_class...7,
         year_agg.x = year_agg...1,
         year_agg.y = year_agg...5,
         quarter.x = quarter...2,
         quarter.y = quarter...6,
         data.x = data...4,
         data.y = data...8) |>
  arrange(year_agg.x,
          year_agg.y,
          predator_length_class.x,
          predator_length_class.y) |>
  # Only interested in comparing cod and flounder during same time period:
  filter(year_agg.x == year_agg.y & quarter.x == quarter.y) |>
  # Filter x and y cols to only compare cod and flounder (no cod-cod etc):
  filter(str_detect(predator_length_class.x, "cod") &
           str_detect(predator_length_class.y, "flounder")) |>
  mutate(mori_value = map2_dbl(data.x, data.y, MoriExe))

mori_df <- mori_fn |> 
  rename(flounder = predator_length_class.y,
         cod = predator_length_class.x) |>
  mutate(flounder = case_when(
    flounder == "flounder_(-Inf,20]" ~ "< 20",
    flounder == "flounder_(20,30]" ~ "20-30",
    flounder == "flounder_(30, Inf]" ~ "30+"
  )) |>
  mutate(cod = case_when(
    cod == "cod_(-Inf,10]" ~ "< 10",
    cod == "cod_(10,15]" ~ "10-15",
    cod == "cod_(15,20]" ~ "15-20",
    cod == "cod_(20,25]" ~ "20-25",
    cod == "cod_(25,30]" ~ "25-30",
    cod == "cod_(30,40]" ~ "30-40",
    cod == "cod_(40,50]" ~ "40-50",
    cod == "cod_(50, Inf]" ~ "50+"
  )) |>
  mutate(year_agg.x = case_when(
    year_agg.x == "(1962,1978]" ~ "1962-1978",
    year_agg.x == "(1978,1990]" ~ "1979-1990",
    year_agg.x == "(1990,2000]" ~ "1991-2000",
    year_agg.x == "(2000,2008]" ~ "2001-2008",
    year_agg.x == "(2008,2014]" ~ "2009-2014",
    year_agg.x == "(2014,2023]" ~ "2015-2023"
  )) |>
  mutate(quarter.x = case_when(
    quarter.x == "1" ~ "Q1",
    quarter.x == "4" ~ "Q4"
  )) 
```

First quarter is in the first row; fourth quarter is in the second row:

```{r}
#| fig-width: 7.3
#| fig-height: 6
#| out-width: 100%

mori_df |>
  ggplot(aes(y = cod, x = flounder, fill = mori_value, label = mori_value)) +
  geom_tile() +
  scale_fill_gradient2(
    low = "lightgreen", mid = "steelblue2", high = "darkred", midpoint = 0.72
  ) +
  facet_grid(quarter.x ~ year_agg.x) +
  theme_bw() +
  theme(panel.grid = element_blank(),
        strip.background = element_rect(fill = "white", colour = "black"),
        axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1),
        legend.position = "bottom",
        legend.margin = margin(t = -7)) +
  labs(fill = "Horn-Morisita dietary distance index: \n",
       y = "Cod length (cm)",
       x = "Flounder length (cm)")
```

